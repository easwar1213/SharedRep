"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = require("react");
var prop_types_1 = __importDefault(require("prop-types"));
var node_polyglot_1 = __importDefault(require("node-polyglot"));
var react_redux_1 = require("react-redux");
var recompose_1 = require("recompose");
var ra_language_english_1 = __importDefault(require("ra-language-english"));
var defaultsDeep_1 = __importDefault(require("lodash/defaultsDeep"));
/**
 * Creates a translation context, available to its children
 *
 * Must be called withing a Redux app.
 *
 * @example
 *     const MyApp = () => (
 *         <Provider store={store}>
 *             <TranslationProvider locale="fr" messages={messages}>
 *                 <!-- Child components go here -->
 *             </TranslationProvider>
 *         </Provider>
 *     );
 */
var TranslationProvider = function (_a) {
    var children = _a.children;
    return react_1.Children.only(children);
};
TranslationProvider.propTypes = {
    locale: prop_types_1.default.string.isRequired,
    messages: prop_types_1.default.object,
    children: prop_types_1.default.element,
};
var mapStateToProps = function (state) { return ({
    locale: state.i18n.locale,
    messages: state.i18n.messages,
}); };
var withI18nContext = recompose_1.withContext({
    translate: prop_types_1.default.func.isRequired,
    locale: prop_types_1.default.string.isRequired,
}, function (_a) {
    var locale = _a.locale, _b = _a.messages, messages = _b === void 0 ? {} : _b;
    var polyglot = new node_polyglot_1.default({
        locale: locale,
        phrases: defaultsDeep_1.default({}, messages, ra_language_english_1.default),
    });
    return {
        locale: locale,
        translate: polyglot.t.bind(polyglot),
    };
});
exports.default = recompose_1.compose(react_redux_1.connect(mapStateToProps), withI18nContext)(TranslationProvider);
